#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <behaviors/rgbled_widget.dtsi>

/ {
    
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                  if-layers = <1 2>;
                  then-layer = <3>;
                };
        };

        keymap {
            compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2            &kp N3           &kp N4               &kp N5             &kp N6     &kp N7                &kp N8            &kp N9            &kp N0            &kp BSPC
&kp TAB   &kp Q &kp W &kp F &kp P &kp G   &kp J &kp L  &kp U     &kp Y   &kp SEMI &kp BSPC
    &kp LCTRL &kp A &kp R &kp S &kp T &kp D   &kp H &kp N  &kp E     &kp I   &kp O    &kp SQT
    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp K &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                   &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 3 &kp RALT
                        >;
        };

        wasd_layer {
            // -----------------------------------------------------------------------------------------
            // | 5  |  ESC |  1  |  2  |  3  |  4  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // | T  |  TAB |  Q  |  W  |  E  |  R  |   |  T  |  Y  |  U   |  I  |  O  | BKSP |
            // | G  | SHFT |  A  |  S  |  D  |  F  |   |  G  |  H  |  J   |  K  |  L  |  '   |
            // | B  | CTRL |  Z  |  X  |  C  |  V  |   |  B  |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
    &kp N5 &kp ESCAPE &kp N1 &kp N2 &kp N3 &kp N4     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
    &kp T  &kp TAB    &kp Q  &kp W  &kp E  &kp R      &kp T  &kp Y  &kp UP  &kp I  &kp O  &kp BSPC
    &kp G  &kp LSHFT  &kp A  &kp S  &kp D  &kp F      &kp G  &kp LEFT  &kp DOWN  &kp RIGHT  &kp L  &kp SQT
    &kp B  &kp LCTRL  &kp X  &kp C  &kp V  &kp B      &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp ESC
                           &mo 2 &kp C &kp SPACE      &kp RET &mo 3 &kp RALT
                        >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | BKSP |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5           &kp F6     &kp F7                          &kp F8                     &kp F9         &kp F10       &kp F11
&kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &kp N1       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans &to 0    &to 1 
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |  <  |  >  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans    &trans  &trans    &trans    &trans           &trans     &trans     &trans     &trans    &trans    &trans
 &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &kp LT   &kp GT      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
        };

        fn_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
 &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &trans
    &trans &kp F11 &kp F12 &kp F13 &kp F14 &kp F15   &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE &kp C_PLAY_PAUSE &trans &trans
    &trans &bt BT_CLR &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                    &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
        };
    };
};
